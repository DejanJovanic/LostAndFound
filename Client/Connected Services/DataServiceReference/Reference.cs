//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.DataServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="http://schemas.datacontract.org/2004/07/Server.Model")]
    [System.SerializableAttribute()]
    public partial class Item : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DatetimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFoundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Datetime {
            get {
                return this.DatetimeField;
            }
            set {
                if ((this.DatetimeField.Equals(value) != true)) {
                    this.DatetimeField = value;
                    this.RaisePropertyChanged("Datetime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Finder {
            get {
                return this.FinderField;
            }
            set {
                if ((object.ReferenceEquals(this.FinderField, value) != true)) {
                    this.FinderField = value;
                    this.RaisePropertyChanged("Finder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFound {
            get {
                return this.IsFoundField;
            }
            set {
                if ((this.IsFoundField.Equals(value) != true)) {
                    this.IsFoundField = value;
                    this.RaisePropertyChanged("IsFound");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Location {
            get {
                return this.LocationField;
            }
            set {
                if ((this.LocationField.Equals(value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemOperationReturnValue", Namespace="http://schemas.datacontract.org/2004/07/Server.Model")]
    [System.SerializableAttribute()]
    public partial class ItemOperationReturnValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.DataServiceReference.Item DatabaseValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.DataServiceReference.Status StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.DataServiceReference.Item SubmittedValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.DataServiceReference.Item DatabaseValue {
            get {
                return this.DatabaseValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseValueField, value) != true)) {
                    this.DatabaseValueField = value;
                    this.RaisePropertyChanged("DatabaseValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.DataServiceReference.Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.DataServiceReference.Item SubmittedValue {
            get {
                return this.SubmittedValueField;
            }
            set {
                if ((object.ReferenceEquals(this.SubmittedValueField, value) != true)) {
                    this.SubmittedValueField = value;
                    this.RaisePropertyChanged("SubmittedValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://schemas.datacontract.org/2004/07/Server.Interfaces")]
    public enum Status : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALIDDATA = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CONFLICT = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NOTLOGGEDIN = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataServiceReference.IDataService")]
    public interface IDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllItems", ReplyAction="http://tempuri.org/IDataService/GetAllItemsResponse")]
        Client.DataServiceReference.Item[] GetAllItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllItems", ReplyAction="http://tempuri.org/IDataService/GetAllItemsResponse")]
        System.Threading.Tasks.Task<Client.DataServiceReference.Item[]> GetAllItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/AddItem", ReplyAction="http://tempuri.org/IDataService/AddItemResponse")]
        Client.DataServiceReference.ItemOperationReturnValue AddItem(string title, System.DateTime dateTime, int location, string description, string finder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/AddItem", ReplyAction="http://tempuri.org/IDataService/AddItemResponse")]
        System.Threading.Tasks.Task<Client.DataServiceReference.ItemOperationReturnValue> AddItemAsync(string title, System.DateTime dateTime, int location, string description, string finder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/AddItemWithOwner", ReplyAction="http://tempuri.org/IDataService/AddItemWithOwnerResponse")]
        Client.DataServiceReference.ItemOperationReturnValue AddItemWithOwner(string title, System.DateTime dateTime, int location, string description, string finder, string owner, bool isFound);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/AddItemWithOwner", ReplyAction="http://tempuri.org/IDataService/AddItemWithOwnerResponse")]
        System.Threading.Tasks.Task<Client.DataServiceReference.ItemOperationReturnValue> AddItemWithOwnerAsync(string title, System.DateTime dateTime, int location, string description, string finder, string owner, bool isFound);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/RemoveItem", ReplyAction="http://tempuri.org/IDataService/RemoveItemResponse")]
        Client.DataServiceReference.ItemOperationReturnValue RemoveItem(Client.DataServiceReference.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/RemoveItem", ReplyAction="http://tempuri.org/IDataService/RemoveItemResponse")]
        System.Threading.Tasks.Task<Client.DataServiceReference.ItemOperationReturnValue> RemoveItemAsync(Client.DataServiceReference.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdateItem", ReplyAction="http://tempuri.org/IDataService/UpdateItemResponse")]
        Client.DataServiceReference.ItemOperationReturnValue UpdateItem(Client.DataServiceReference.Item oldItem, Client.DataServiceReference.Item newItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdateItem", ReplyAction="http://tempuri.org/IDataService/UpdateItemResponse")]
        System.Threading.Tasks.Task<Client.DataServiceReference.ItemOperationReturnValue> UpdateItemAsync(Client.DataServiceReference.Item oldItem, Client.DataServiceReference.Item newItem);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataServiceChannel : Client.DataServiceReference.IDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataServiceClient : System.ServiceModel.ClientBase<Client.DataServiceReference.IDataService>, Client.DataServiceReference.IDataService {
        
        public DataServiceClient() {
        }
        
        public DataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.DataServiceReference.Item[] GetAllItems() {
            return base.Channel.GetAllItems();
        }
        
        public System.Threading.Tasks.Task<Client.DataServiceReference.Item[]> GetAllItemsAsync() {
            return base.Channel.GetAllItemsAsync();
        }
        
        public Client.DataServiceReference.ItemOperationReturnValue AddItem(string title, System.DateTime dateTime, int location, string description, string finder) {
            return base.Channel.AddItem(title, dateTime, location, description, finder);
        }
        
        public System.Threading.Tasks.Task<Client.DataServiceReference.ItemOperationReturnValue> AddItemAsync(string title, System.DateTime dateTime, int location, string description, string finder) {
            return base.Channel.AddItemAsync(title, dateTime, location, description, finder);
        }
        
        public Client.DataServiceReference.ItemOperationReturnValue AddItemWithOwner(string title, System.DateTime dateTime, int location, string description, string finder, string owner, bool isFound) {
            return base.Channel.AddItemWithOwner(title, dateTime, location, description, finder, owner, isFound);
        }
        
        public System.Threading.Tasks.Task<Client.DataServiceReference.ItemOperationReturnValue> AddItemWithOwnerAsync(string title, System.DateTime dateTime, int location, string description, string finder, string owner, bool isFound) {
            return base.Channel.AddItemWithOwnerAsync(title, dateTime, location, description, finder, owner, isFound);
        }
        
        public Client.DataServiceReference.ItemOperationReturnValue RemoveItem(Client.DataServiceReference.Item item) {
            return base.Channel.RemoveItem(item);
        }
        
        public System.Threading.Tasks.Task<Client.DataServiceReference.ItemOperationReturnValue> RemoveItemAsync(Client.DataServiceReference.Item item) {
            return base.Channel.RemoveItemAsync(item);
        }
        
        public Client.DataServiceReference.ItemOperationReturnValue UpdateItem(Client.DataServiceReference.Item oldItem, Client.DataServiceReference.Item newItem) {
            return base.Channel.UpdateItem(oldItem, newItem);
        }
        
        public System.Threading.Tasks.Task<Client.DataServiceReference.ItemOperationReturnValue> UpdateItemAsync(Client.DataServiceReference.Item oldItem, Client.DataServiceReference.Item newItem) {
            return base.Channel.UpdateItemAsync(oldItem, newItem);
        }
    }
}
